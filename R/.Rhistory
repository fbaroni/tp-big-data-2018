obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
proporcion<- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 10))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
source('lectura_datasets.R')
library(plyr)
dataframe <- pauta2016_1
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
proporcion<- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 10))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
source('lectura_datasets.R')
library(plyr)
dataframe <- pauta2016_1
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
proporcion<- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 10))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2017_2, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
proporcion<- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 10))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
# medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 10))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 10))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
print(colnames(dataframe)[12])
if(colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 10))
}
# medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
# medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
# medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
# medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
# medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
# medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 10))
}
# medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
# medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
# medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
# medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
# medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
# medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
# proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
# print(proporcion_10_medios)
print(medios2017_2)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 10))
}
# medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
# medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
# medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
# medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
# medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
# medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
# proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
# print(proporcion_10_medios)
print(medios2017_2)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 14))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 14))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 15))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 15))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio2014', 'proporcion2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 15))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio2014', '2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', '2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', '2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', '2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', '2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', '2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', '2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 15))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio2014', 'anio2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', '2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', '2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', '2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', '2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', '2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', '2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 15))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio', 'anio2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', 'anio2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', 'semestre2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', 'semestre2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', 'semestre2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', 'semestre2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', 'semestre2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 15))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio2014', 'anio2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', 'anio2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', 'semestre2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', 'semestre2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', 'semestre2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', 'semestre2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', 'semestre2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
write.csv(proporcion_10_medios, file = "proporcion_medios.csv")
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 25))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio2014', 'anio2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', 'anio2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', 'semestre2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', 'semestre2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', 'semestre2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', 'semestre2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', 'semestre2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
write.csv(proporcion_10_medios, file = "proporcion_medios.csv")
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 25))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio2014', 'anio2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', 'anio2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', 'semestre2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', 'semestre2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', 'semestre2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', 'semestre2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', 'semestre2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
write.csv(proporcion_10_medios, file = "proporcion_medios.csv")
