medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 15))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio2014', '2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', '2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', '2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', '2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', '2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', '2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', '2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 15))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio2014', 'anio2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', '2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', '2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', '2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', '2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', '2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', '2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 15))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio', 'anio2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', 'anio2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', 'semestre2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', 'semestre2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', 'semestre2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', 'semestre2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', 'semestre2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
print(proporcion_10_medios)
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 15))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio2014', 'anio2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', 'anio2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', 'semestre2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', 'semestre2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', 'semestre2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', 'semestre2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', 'semestre2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
write.csv(proporcion_10_medios, file = "proporcion_medios.csv")
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 25))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio2014', 'anio2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', 'anio2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', 'semestre2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', 'semestre2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', 'semestre2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', 'semestre2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', 'semestre2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
write.csv(proporcion_10_medios, file = "proporcion_medios.csv")
source('lectura_datasets.R')
library(plyr)
obtener_10_primeros_medios_proporcion <- function(dataframe) {
#reemplazo titulo total_con_iva por total para poder ser usado el script desde 2014 a 2018
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
proporcion <- (dataframe$total/sum(dataframe$total))*100
medio_proporcion <- cbind.data.frame(dataframe$medio,proporcion)
names(medio_proporcion) <- c("medio", "proporcion")
proporcion <- aggregate(medio_proporcion$proporcion, by=list(medio=medio_proporcion$medio), FUN=sum)
proporcion_ordenado <- proporcion[order(-proporcion$x),]
return(head(proporcion_ordenado, 25))
}
medios2014 <- obtener_10_primeros_medios_proporcion(pauta2014)
names(medios2014) <- c('medio2014', 'anio2014')
medios2015 <- obtener_10_primeros_medios_proporcion(pauta2015)
names(medios2015) <- c('medio2015', 'anio2015')
medios2016_1 <- obtener_10_primeros_medios_proporcion(pauta2016_1)
names(medios2016_1) <- c('medios2016_1', 'semestre2016_1')
medios2016_2 <- obtener_10_primeros_medios_proporcion(pauta2016_2)
names(medios2016_2) <- c('medios2016_2', 'semestre2016_2')
medios2017_1 <- obtener_10_primeros_medios_proporcion(pauta2017_1)
names(medios2017_1) <- c('medios2017_1', 'semestre2017_1')
medios2017_2 <- obtener_10_primeros_medios_proporcion(pauta2017_2)
names(medios2017_2) <- c('medios2017_2', 'semestre2017_2')
medios2018_1 <- obtener_10_primeros_medios_proporcion(pauta2018_1)
names(medios2018_1) <- c('medios2018_1', 'semestre2018_1')
proporcion_10_medios <- data.frame(medios2014, medios2015, medios2016_1, medios2016_2, medios2017_1, medios2018_1)
write.csv(proporcion_10_medios, file = "proporcion_medios.csv")
source('lectura_datasets.R')
library(ggplot2)
limpiar_total <- function(dataframe){
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
return(dataframe)
}
graficar_proporcion_rubro <- function(dataframe) {
dataframe <- limpiar_total(dataframe)
#Por rubro
proporcion <- (dataframe$total/sum(dataframe$total))*100
by_rubro <- cbind.data.frame(dataframe$rubro, proporcion)
#arreglar nombre
names(by_rubro) <- c("rubro", "proporcion")
#suma por clase
by_grupo_suma <- aggregate(by_rubro$proporcion, by=list(rubro=by_rubro$rubro), FUN=sum)
#ordenar
by_grupo_suma <- by_grupo_suma[order(-by_grupo_suma$x),]
write.csv(by_grupo_suma, file = "rubro_.csv")
# #grafico de torta
# pie(by_grupo_suma$x, by_grupo_suma$rubro)
#
# #grafico barra ggplot
# plot(by_grupo_suma$x, by_grupo_suma$rubro)
# plot(by_grupo_suma$x, by_grupo_suma$rubro, type = "b")
# p<-ggplot(data=by_grupo_suma, aes(x=rubro, y=x)) + geom_bar(stat="identity")
# p
}
obtener_archvo_rubro_proporcion <- function(dataframe, filename) {
dataframe <- limpiar_total(dataframe)
#Por rubro
proporcion <- (dataframe$total/sum(dataframe$total))*100
by_rubro <- cbind.data.frame(dataframe$rubro, proporcion)
#arreglar nombre
names(by_rubro) <- c("rubro", "proporcion")
#suma por clase
by_grupo_suma <- aggregate(by_rubro$proporcion, by=list(rubro=by_rubro$rubro), FUN=sum)
#ordenar
by_grupo_suma <- by_grupo_suma[order(-by_grupo_suma$x),]
write.csv(by_grupo_suma, file = filename)
}
obtener_archvo_rubro_proporcion(pauta2017_1, 'rubro_2017_1.csv')
source('lectura_datasets.R')
library(ggplot2)
limpiar_total <- function(dataframe){
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
return(dataframe)
}
graficar_proporcion_rubro <- function(dataframe) {
dataframe <- limpiar_total(dataframe)
#Por rubro
proporcion <- (dataframe$total/sum(dataframe$total))*100
by_rubro <- cbind.data.frame(dataframe$rubro, proporcion)
#arreglar nombre
names(by_rubro) <- c("rubro", "proporcion")
#suma por clase
by_grupo_suma <- aggregate(by_rubro$proporcion, by=list(rubro=by_rubro$rubro), FUN=sum)
#ordenar
by_grupo_suma <- by_grupo_suma[order(-by_grupo_suma$x),]
write.csv(by_grupo_suma, file = "rubro_.csv")
# #grafico de torta
# pie(by_grupo_suma$x, by_grupo_suma$rubro)
#
# #grafico barra ggplot
# plot(by_grupo_suma$x, by_grupo_suma$rubro)
# plot(by_grupo_suma$x, by_grupo_suma$rubro, type = "b")
# p<-ggplot(data=by_grupo_suma, aes(x=rubro, y=x)) + geom_bar(stat="identity")
# p
}
obtener_archvo_rubro_proporcion <- function(dataframe, filename) {
dataframe <- limpiar_total(dataframe)
#Por rubro
proporcion <- (dataframe$total/sum(dataframe$total))*100
by_rubro <- cbind.data.frame(dataframe$rubro, proporcion)
#arreglar nombre
names(by_rubro) <- c("rubro", "proporcion")
#suma por clase
by_grupo_suma <- aggregate(by_rubro$proporcion, by=list(rubro=by_rubro$rubro), FUN=sum)
#ordenar
by_grupo_suma <- by_grupo_suma[order(-by_grupo_suma$x),]
write.csv(by_grupo_suma, file = filename)
}
obtener_archvo_rubro_proporcion(pauta2018_1, 'rubro_2018_1.csv')
source('lectura_datasets.R')
library(ggplot2)
limpiar_total <- function(dataframe){
if(colnames(dataframe)[3] == 'total_con_iva'){
colnames(dataframe)[3] <- "total"
}
if(ncol(dataframe) > 10 && colnames(dataframe)[12] == 'total_con_iva'){
colnames(dataframe)[12] <- "total"
}
return(dataframe)
}
graficar_proporcion_rubro <- function(dataframe) {
dataframe <- limpiar_total(dataframe)
#Por rubro
proporcion <- (dataframe$total/sum(dataframe$total))*100
by_rubro <- cbind.data.frame(dataframe$rubro, proporcion)
#arreglar nombre
names(by_rubro) <- c("rubro", "proporcion")
#suma por clase
by_grupo_suma <- aggregate(by_rubro$proporcion, by=list(rubro=by_rubro$rubro), FUN=sum)
#ordenar
by_grupo_suma <- by_grupo_suma[order(-by_grupo_suma$x),]
write.csv(by_grupo_suma, file = "rubro_.csv")
# #grafico de torta
# pie(by_grupo_suma$x, by_grupo_suma$rubro)
#
# #grafico barra ggplot
# plot(by_grupo_suma$x, by_grupo_suma$rubro)
# plot(by_grupo_suma$x, by_grupo_suma$rubro, type = "b")
# p<-ggplot(data=by_grupo_suma, aes(x=rubro, y=x)) + geom_bar(stat="identity")
# p
}
obtener_archvo_rubro_proporcion <- function(dataframe, filename) {
dataframe <- limpiar_total(dataframe)
#Por rubro
proporcion <- (dataframe$total/sum(dataframe$total))*100
by_rubro <- cbind.data.frame(dataframe$rubro, proporcion)
#arreglar nombre
names(by_rubro) <- c("rubro", "proporcion")
#suma por clase
by_grupo_suma <- aggregate(by_rubro$proporcion, by=list(rubro=by_rubro$rubro), FUN=sum)
#ordenar
by_grupo_suma <- by_grupo_suma[order(-by_grupo_suma$x),]
write.csv(by_grupo_suma, file = filename)
}
obtener_archvo_rubro_proporcion(pauta2017_2, 'rubro_2017_2.csv')
rubros_anuales <- read.csv(file="../datasets/rubros_anuales.csv", header=TRUE, sep=",")
print(rubros_anuales)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
print(rubros_anuales)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
print(rubros_anuales)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola
print(typeof(rubros_anuales))
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola
print(names(rubros_anuales))
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola
print(names(rubros_anuales))
print(rubros_anuales[1])
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola
print(names(rubros_anuales))
print(rubros_anuales[2])
View(pauta2018_1)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola
print(names(rubros_anuales))
print(rubros_anuales[2])
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2], rubros_anuales[2], rubros_anuales[2:])
print(rubros_duplicado_2014)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola
print(names(rubros_anuales))
print(rubros_anuales[2])
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2], rubros_anuales[2], rubros_anuales[2:10])
print(rubros_duplicado_2014)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola
print(names(rubros_anuales))
print(rubros_anuales[2])
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2], rubros_anuales[2], rubros_anuales[2:8])
print(rubros_duplicado_2014)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola
print(names(rubros_anuales))
print(rubros_anuales[2])
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2], rubros_anuales[2], rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
print(rubros_duplicado_2014)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola
print(names(rubros_anuales))
print(rubros_anuales[2])
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2], rubros_anuales[2], rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
print(rubros_duplicado_2014)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
print(rubros_duplicado_2014)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_anuales[1:3],  rubros_anuales[3:9])
names(rubros_duplicado_2015)[3] <- 'X2015.1'
names(rubros_duplicado_2015)[4] <- 'X2015.2'
print(rubros_duplicado_2015)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_duplicado_2014[1:3],  rubros_duplicado_2014[3:9])
names(rubros_duplicado_2015)[3] <- 'X2015.1'
names(rubros_duplicado_2015)[4] <- 'X2015.2'
print(rubros_duplicado_2015)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_duplicado_2014[1:3],  rubros_duplicado_2014[3:9])
names(rubros_duplicado_2015)[4] <- 'X2015.1'
names(rubros_duplicado_2015)[5] <- 'X2015.2'
print(rubros_duplicado_2015)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_duplicado_2014[1:3],  rubros_duplicado_2014[4:9])
names(rubros_duplicado_2015)[4] <- 'X2015.1'
names(rubros_duplicado_2015)[5] <- 'X2015.2'
print(rubros_duplicado_2015)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_duplicado_2014[1:3],  rubros_duplicado_2014[4:9])
# names(rubros_duplicado_2015)[4] <- 'X2015.1'
# names(rubros_duplicado_2015)[5] <- 'X2015.2'
print(rubros_duplicado_2015)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_duplicado_2014[1:4],  rubros_duplicado_2014[4:9])
# names(rubros_duplicado_2015)[4] <- 'X2015.1'
# names(rubros_duplicado_2015)[5] <- 'X2015.2'
print(rubros_duplicado_2015)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_duplicado_2014[1:4],  rubros_duplicado_2014[4:9])
names(rubros_duplicado_2015)[4] <- 'X2015.1'
names(rubros_duplicado_2015)[5] <- 'X2015.2'
print(rubros_duplicado_2015)
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
#se duplican los valores ya que son proporciones
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_duplicado_2014[1:4],  rubros_duplicado_2014[4:9])
names(rubros_duplicado_2015)[4] <- 'X2015.1'
names(rubros_duplicado_2015)[5] <- 'X2015.2'
write.csv(by_grupo_suma, file = "datasets/rubros-semestres.csv")
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
#se duplican los valores ya que son proporciones
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_duplicado_2014[1:4],  rubros_duplicado_2014[4:9])
names(rubros_duplicado_2015)[4] <- 'X2015.1'
names(rubros_duplicado_2015)[5] <- 'X2015.2'
write.csv(rubros_duplicado_2015, file = "datasets/rubros-semestres.csv")
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
#se duplican los valores ya que son proporciones
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_duplicado_2014[1:4],  rubros_duplicado_2014[4:9])
names(rubros_duplicado_2015)[4] <- 'X2015.1'
names(rubros_duplicado_2015)[5] <- 'X2015.2'
write.csv(rubros_duplicado_2015, file = "/datasets/rubros-semestres.csv")
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
#se duplican los valores ya que son proporciones
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_duplicado_2014[1:4],  rubros_duplicado_2014[4:9])
names(rubros_duplicado_2015)[4] <- 'X2015.1'
names(rubros_duplicado_2015)[5] <- 'X2015.2'
write.csv(rubros_duplicado_2015, file = "datasets/rubros-semestres.csv")
rubros_anuales <- read.csv(file="../datasets/rubros-anuales.csv", header=TRUE, sep=",")
#se extrapola el dato de la proporción en los semestres 2014_1, 2014_2, 2015_1, 2015_2
#se duplican los valores ya que son proporciones
rubros_duplicado_2014 <- cbind(rubros_anuales[1:2],  rubros_anuales[2:8])
names(rubros_duplicado_2014)[2] <- 'X2014.1'
names(rubros_duplicado_2014)[3] <- 'X2014.2'
rubros_duplicado_2015 <- cbind(rubros_duplicado_2014[1:4],  rubros_duplicado_2014[4:9])
names(rubros_duplicado_2015)[4] <- 'X2015.1'
names(rubros_duplicado_2015)[5] <- 'X2015.2'
write.csv(rubros_duplicado_2015, file = "../datasets/rubros-semestres.csv")
